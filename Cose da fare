-Gridsearch su batchSize, learningRate, parametri scheduler
-Plottare grafico: loss vs. n° epoch
-Chiedere alliegro il 0.5 a riga 58
-CD_Loss = cd_weight * ( 0.5 * AVG_Y2X + 0.5 * AVG_X2Y )

    Where 'cd_weight' is a loss weight term that you should cross-validate. Hint: try with cd_weight=100!

-Per i momenti di noia cambiare le grandezze all'interno della classe decoder
-Questione data training e data test e validation
-mettere una baseline con rumore a 0 e stessa nuvola di punti ad 1 (loss va 300 a 0)

CLASSI DA TESTARE:
Airplane, Chair, Table,
Lamp, Car, Motorbike, Mug

-----------------------------PER SABATO
PRINT POINT CLOUD
IMPLEMENTA EARLY STOPPING
GRID SEARCH:
1 - FAKE TEST (10 epoch su  un SUBSET del training set, considerando TUTTE le classi),
2 - modifica range hyperparametri (in base a quanto ottenuto al punto precedente) ed
    esegui gridsearch (o random search) con numero di epoch elevato (250 in su)
    su tutto il training set (con TUTTE le classi).
    Per semplicità, imposta learning rate fisso, ma applica gridsearch su step_lr
3 - gridsearch su learning rate
IMPLEMENTARE RANDOM BASELINE: misurare distanza tra
1 - NUVOLA DI PUNTI dopo sampling (1024) e
2 - NUVOLA DI PUNTI dopo sampling e dopo aggiunta NOISE
3 - MISURARE DISTANZA Chamfer loss e mostrarla come baseline nei grafici.
MODIFICA ARCHITETTURE